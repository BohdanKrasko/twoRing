{"version":3,"sources":["components/Pages/EnterRoom/EnterRoom.js","components/Images/plane.png","components/Images/ring.png","components/Pages/Magic/Magic.js","App.js","reportWebVitals.js","index.js"],"names":["EnterRoom","props","_isMounted","openEnterEnterRoom","setState","isEnterEnterRoomModalVisibility","closeEnterEnterRoom","setRoomName","roomName","document","getElementById","value","handleOk","state","el","data","id","onClick","this","size","title","visible","onOk","onCancel","centered","footer","closable","placeholder","autocomplete","onChange","to","Component","Magic","Input","TextArea","closeTextModal","a","textModal","openTextModal","closeRingModal","ringModal","openRingModal","closeWaitTag","tagWait","openWaitTag","sleep","milliseconds","Promise","resolve","setTimeout","rooms","serverUrl","roomInput","users","ws","match","params","connect","joinRoom","connectToWebsocket","WebSocket","addEventListener","event","onWebsocketOpen","handleNewMessage","onWebsocketClose","console","log","currentReconnectDelay","reconnectToWebsocket","maxReconnectDelay","split","i","length","msg","JSON","parse","message","includes","action","handleChatMessage","handleUserJoined","handleUserLeft","handleRoomJoined","room","findRoom","target","messages","push","stringify","userExists","sender","splice","name","private","newMessage","send","roomId","onopen","user","color","orientation","width","height","src","plane","icon","SyncOutlined","spin","ring","App","exact","path","component","AppForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1bde08fd.chunk.js","sourcesContent":["import React, { useState, Component } from 'react';\nimport '../../../App.css';\nimport { Modal, Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './EnterRoom.css'\nimport { connect } from '../../../api'\n\nclass EnterRoom extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    // let temp = JSON.parse(this.props.message);\n    this.state = {\n      // message: temp\n      el: '#app',\n      roomName: '',\n      data: {\n        isEnterEnterRoomModalVisibility: false\n      }\n    };\n  }\n  \n  openEnterEnterRoom = () => this.setState({isEnterEnterRoomModalVisibility: true})\n\n\tcloseEnterEnterRoom = () => this.setState({isEnterEnterRoomModalVisibility: false})\n\n  setRoomName = () => this.setState( {roomName: document.getElementById('poolName').value})\n\n  handleOk = () => {\n    // const {data: {ws, user: {name}}} = this.state;\n    // // this.setState({data: {user: {name: document.getElementById('poolName').value}}});\n    // this.setRoomId()\n    // console.log(\"serverUrl: \" + this.state.data.serverUrl);\n    // console.log(\"name: \" + this.state.data.room.id);\n    // this.setState({data: {ws: new WebSocket(this.state.data.serverUrl + \"?name=\" + this.state.data.room.id)}});\n    \n    this.closeEnterEnterRoom(false);\n    \n  };\n\n  render() {\n\n    return (\n      <>\n      <div id=\"divElement\">\n        <Button onClick={this.openEnterEnterRoom} size=\"large\">\n          Secret Room\n        </Button>\n        \n        <Modal title=\"Name of Room\" \n          visible={this.state.isEnterEnterRoomModalVisibility} \n          onOk={this.handleOk} onCancel={this.closeEnterEnterRoom} \n          centered=\"true\" footer={null} closable=\"false\">\n          <Input placeholder=\"Room name. 719\" id=\"poolName\" autocomplete=\"off\" onChange={() => {\n            this.setState({roomName: document.getElementById('poolName').value})\n          }\n            }/>\n          <Link to={`/${this.state.roomName}/magic`}>\n              <Button onClick={this.handleOk} size=\"large\">\n                Join\n              </Button>\n           </Link>\n        </Modal>\n      </div>\n      </>\n    );\n  }\n}\n\n\nexport default EnterRoom","export default __webpack_public_path__ + \"static/media/plane.2a4fb381.png\";","export default __webpack_public_path__ + \"static/media/ring.2c130f4b.png\";","import React, { useState, Component } from 'react';\nimport '../../../App.css';\nimport { Modal, Button, Input, Tag, Divider } from 'antd';\nimport {\n  SyncOutlined\n} from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport plane from '../../Images/plane.png'\nimport ring from '../../Images/ring.png'\nimport './Magic.css'\n\nconst { TextArea } = Input;\n\nclass Magic extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        el: '#app',\n        rooms: [],\n        serverUrl: \"ws://54.86.95.112:80/ws\",\n        roomInput: null,\n        users: [],\n        isEnterEnterRoomModalVisibility: false,\n        data: {\n          ws: null,\n        },\n        textModal: false,\n        ringModal: false,\n        tagWait: true\n    };\n  }\n\n//   componentDidMount () {\n// \t\tthis._isMounted = true;\n// \t}\n\nasync componentDidMount() {\n\n    // this.user.push({name: this.props.match.params.roomName});\n    await this.setState({roomInput: this.props.match.params.roomName})\n    await this.connect();\n    await this.joinRoom()\n\n  }\n\n//   componentWillUnmount() {\n// \t\tthis._isMounted = false;\n// \t}\n\nopenEnterEnterRoom = () => this.setState({isEnterEnterRoomModalVisibility: true})\n\ncloseEnterEnterRoom = () => this.setState({isEnterEnterRoomModalVisibility: false})\n\ncloseTextModal = async () => await  this.setState({textModal: false})\nopenTextModal = async () => await this.setState({textModal: true})\n\ncloseRingModal = async () => await  this.setState({ringModal: false})\nopenRingModal = async () => await this.setState({ringModal: true})\n \ncloseWaitTag = async () =>  this.setState({tagWait: false})\nopenWaitTag = async () => this.setState({tagWait: true})\n\nsleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nhandleOk = () => {\n    this.closeEnterEnterRoom(false); \n  };\n// server func\nasync connect() {\n    await this.connectToWebsocket();\n}\n\n  async connectToWebsocket() {\n    await this.setState({data: {ws: await new WebSocket(this.state.serverUrl + \"?name=\" + this.props.match.params.roomName)}})\n    await this.state.data.ws.addEventListener('open', async (event) => { await this.onWebsocketOpen(event) });\n    await this.state.data.ws.addEventListener('message',async  (event) => { await this.handleNewMessage(event) });\n    await this.state.data.ws.addEventListener('close', async (event) => {await this.onWebsocketClose(event) });\n  }\n\n  async onWebsocketOpen() {\n    console.log(\"connected to WS!\");\n    this.currentReconnectDelay = 1000;\n  }\n\n  onWebsocketClose() {\n    this.ws = null;\n\n    setTimeout(() => {\n      this.reconnectToWebsocket();\n    }, this.currentReconnectDelay);\n\n  }\n\n  reconnectToWebsocket() {\n    if (this.currentReconnectDelay < this.maxReconnectDelay) {\n      this.currentReconnectDelay *= 2;\n    }\n    this.connectToWebsocket();\n  }\n\n  async handleNewMessage(event) {\n    let data = event.data;\n    console.log(\"handleNewMessage \" + data)\n    data = data.split(/\\r?\\n/);\n    \n\n    for (let i = 0; i < data.length; i++) {\n      let msg = JSON.parse(data[i]);\n      if (msg.message.includes(\"joined the room\")) {\n        this.closeWaitTag()\n        await this.sleep(2000) \n         this.openEnterEnterRoom()\n        await this.sleep(5000) \n        this.closeEnterEnterRoom();\n        await this.openTextModal();\n      }\n      switch (msg.action) {\n        case \"send-message\":\n            console.log('send-message')\n          this.handleChatMessage(msg);\n          break;\n        case \"user-join\":\n            console.log(\"user-join\")\n          this.handleUserJoined(msg);\n          break;\n        case \"user-left\":\n            console.log(\"user-left\")\n          this.handleUserLeft(msg);\n          break;\n        case \"room-joined\":\n            console.log(\"room-joined\")\n          this.handleRoomJoined(msg);\n          break;\n        default:\n          break;\n      }\n\n    }\n  }\n\n  handleChatMessage(msg) {\n    const room = this.findRoom(msg.target.id);\n    if (typeof room !== \"undefined\") {\n      room.messages.push(msg);\n    }\n  }\n\n  handleUserJoined(msg) {\n    console.log(\"msg j\" + JSON.stringify(msg))\n    if(!this.userExists(msg.sender)) {\n      this.state.users.push(msg.sender);\n    }\n  }\n\n  handleUserLeft(msg) {\n      console.log(\"msg \" + JSON.stringify(msg))\n    for (let i = 0; i < this.state.users.length; i++) {\n      if (this.state.users[i].id == msg.sender.id) {\n        this.state.users.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  handleRoomJoined(msg) {\n    let room = msg.target;\n    room.name = room.private ? msg.sender.name : room.name;\n    room[\"messages\"] = [];\n    room.newMessage = \"jhgsdjhckjsdhkcnksdjn\" //////////////////////////\n    this.state.rooms.push(room)\n    console.log(this.state)\n  }\n\n  async sendMessage(room) {\n      console.log(room.id)\n      console.log(room.name)\n    if (room.newMessage !== \"\") {\n        await this.state.data.ws.send(JSON.stringify({\n            action: 'send-message',\n            message: room.newMessage,\n            target: {\n            id: room.id,\n            name: room.name\n            }\n        }));\n        room.newMessage = \"\";\n    }\n  }\n\n  findRoom(roomId) {\n    for (let i = 0; i < this.state.rooms.length; i++) {\n      if (this.state.rooms[i].id === roomId) {\n        return this.state.rooms[i];\n      }\n    }\n  }\n\n  async joinRoom() {\n      console.log(\"joinRoom \" + this.state.roomInput)\n      let roomName = this.state.roomInput\n      this.state.data.ws.onopen = async () =>  await this.state.data.ws.send(JSON.stringify({ action: 'join-room', message: roomName}));\n      this.setState({roomInput: \"\"})\n  }\n\n  leaveRoom(room) {\n    this.state.data.ws.onopen = async () =>  await this.state.data.ws.send(JSON.stringify({ action: 'leave-room', message: room.id }));\n\n    for (let i = 0; i < this.state.rooms.length; i++) {\n      if (this.state.rooms[i].id === room.id) {\n        this.state.rooms.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n//   async joinPrivateRoom(room) {\n//       console.log(\"room = \" + JSON.stringify(room))\n//     this.state.data.ws.onopen = async () =>  await this.state.data.ws.send(JSON.stringify({ action: 'join-room-private', message: room.id }));\n//   }\n\n  userExists(user) {\n    for (let i = 0; i < this.state.users.length; i++) {\n      if (this.state.users[i].id === user.id) {\n        return true;\n      }\n    }\n    return false;\n  } \n\n  render() {\n    // this.openEnterEnterRoom();\n    \n    return (\n      <>\n      <div id=\"divElement\">\n      {/* <TextArea rows={4} /> */}\n        {/* <Button onClick={async () => {\n            await this.sendMessage(this.state.rooms[0])\n        }} size=\"large\">\n          Secret Room\n        </Button> */}\n        <div id=\"tag2\">\n          <Tag color=\"green\" visible={this.state.tagWait}>Wait for a magic ...</Tag>\n        </div>\n        \n        <Modal\n          visible={this.state.isEnterEnterRoomModalVisibility} \n          onCancel={this.closeEnterEnterRoom} \n          centered=\"true\" footer={null} closable=\"false\">\n            <Divider orientation=\"Center\">I fly to you &#128156;</Divider>\n            <div>\n              <img id=\"plane\" width = \"100%\" height = \"100%\" src={plane}/>\n            </div>\n            <div id=\"tag\">\n              <Tag icon={<SyncOutlined spin />} color=\"processing\">\n                Yyyyyeeeee almost done)\n              </Tag>\n            </div>\n        </Modal>\n      </div>\n      <div>\n      <Modal visible={this.state.textModal} footer={null} width=\"80%\">\n            {/* <Divider orientation=\"Center\">Will you my girlfrend?</Divider> */}\n            <div id=\"text\">\n              <div id=\"tag2\">\n                <Tag color=\"magenta\">Коли перший раз тебе побачив то на хвилину просто завмер не розумів що відбувається.</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"red\">І в голові була тільки одна думка як познайомитися з тобою) і да ти вже знаєш до чого додумався)</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"volcano\">Коли ми разом час проходить дууууже швидко інколи хочеть просто разом сидіти в обнімку до ранку.</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"orange\">Сподіваюсь всі минулі рази тобі сподобалися, да були різні моменти наприклад могло світло потухнути, або сфітлофовор не робити бо машини там не їздять)</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"gold\">Ми не так довго знайомі і можливо багато чого не знаємо один про одного, але з кожним новим фактом ми завжди находили щось спільне навіть варіант лаб був однаковий, а це про щось говорить да да)</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"lime\">І хочу сказати тобі одні слова знову не тільки написавши їх, а і в живу.</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"green\">Ти </Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"cyan\">мені </Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"blue\"> подобаєшся.</Tag>\n              </div>\n              <div id=\"tag2\">\n                <Tag color=\"geekblue\">Давай бути разом.</Tag>\n              </div>\n            </div>\n            <Button onClick={() => {\n              this.closeTextModal();\n              this.openRingModal()\n            }} size=\"large\">\n                Натисни мене\n              </Button>\n        </Modal>\n      </div>\n      <div id=\"divElement\">\n        <Modal visible={this.state.ringModal} footer={null}>\n            <Divider orientation=\"Center\">Will you my girlfrend?</Divider>\n            <div>\n              <img id=\"ring\" width = \"100%\" height = \"100%\" src={ring}/>\n            </div>\n        </Modal>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Magic","// App.js\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { \n\tBrowserRouter as Router,\n\tRoute} from 'react-router-dom';\nimport AppForm from './components/Pages/EnterRoom/EnterRoom'\nimport Magic from './components/Pages/Magic/Magic'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\n\t\t\t<Router >\n\t\t\t\t<Route exact path='/' component={AppForm}/>\n\t\t\t\t<Route exact path='/:roomName/magic' component={Magic}/>\n\t\t\t</Router>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}